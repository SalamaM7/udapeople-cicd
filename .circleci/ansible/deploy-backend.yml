---

- name: "deployment play." 
  hosts: web
  remote_user: ubuntu
  become: true
  become_method: sudo
  become_user: root
  gather_facts: false
  vars:
    ansible_python_interpreter: /usr/bin/python3
    ansible_host_key_checking: false
    ansible_stdout_callback: yaml

  pre_tasks:
    - name: "wait 600 seconds for target connection to become reachable/usable."
      wait_for_connection:
        timeout: 600

    - name: "install python for Ansible."
      apt:
        name: python3
        state: latest
        update_cache: yes
 
    - setup:

    - name: "Creates backend app directory"
      file:
        path: ~/backend-app
        state: directory

    - copy:
        src: .circleci/ansible/roles/deploy/files/artifact.tar.gz
        dest: ~/backend-app

    - name: "Unarchive backend files"
      unarchive:
        src: artifact.tar.gz
        dest: ~/backend-app

    - name: "Installing Node Dependencies"
      shell: |
        cd ~/backend-app
        npm i

    - name: Start the app
      shell: |
        export TYPEORM_ENTITIES=./backend/dist/modules/domain/**/*.entity{.ts,.js}
        export TYPEORM_HOST=localhost
        export TYPEORM_PORT=5532
        export TYPEORM_USERNAME=postgres
        export TYPEORM_PASSWORD=password
        export TYPEORM_DATABASE=glee
        export TYPEORM_MIGRATIONS_DIR=./backend/dist/migrations
        export TYPEORM_MIGRATIONS=./backend/dist/migrations/*.ts
        pm2 stop default
        pm2 start -f /home/ubuntu/backend/dist/main.js

    - name: "Executing Node app with PM2"
      shell: |
        cd ~/backend-app/dist
        pm2 stop default
        pm2 start main.js

      register: execute_node

    - name: print message
      debug:
        msg: "{{ execute_node.stdout_lines }}"

    - name: "Configure pm2 to start as service"
      become: true
      shell: |
        env PATH=$PATH:/usr/local/bin pm2 startup systemd -u ubuntu --hp /home/ubuntu
        pm2 save 


  
